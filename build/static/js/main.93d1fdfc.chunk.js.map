{"version":3,"sources":["components/RadioInput.jsx","components/ShampooItem/Color/Color.jsx","components/ShampooItem/Capacity/Capacity.jsx","components/ShampooItem/Quantity/Quantity.jsx","components/ShampooItem/ShampooItem.jsx","img/1.png","img/2.png","img/3.jpg","components/ShampooList.jsx","App.jsx","index.js"],"names":["RadioInput","options","radioName","color","selectIsOpen","onChangeHandler","toggleSelect","id","type","value","name","onChange","htmlFor","className","onClick","Color","colors","setSelectIsOpen","useState","currentColor","setCurrentColor","handleColor","e","target","map","i","RadioInputOptions","Capacity","currentCapacity","capacities","capacityHandler","changeHandler","parseInt","Fragment","checked","Quantity","quantity","quantityHandler","preventDefault","prev","coefficientCapacity","100","200","300","ShampooItem","image","radio","price","setColors","setCapacities","setQuantity","setCurrentCapacity","useEffect","onMouseLeave","src","alt","width","height","onSubmit","ShampoosList","ShampooImg1","ShampooImg2","ShampooImg3","ShampooList","shampoo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93d1fdfc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst RadioInput = ({ options }) => {\r\n    const { radioName, color, selectIsOpen, onChangeHandler, toggleSelect} = options;\r\n    return (\r\n        <>\r\n            <input id={`${radioName}-${color}`} type=\"radio\" value={color} name={radioName} onChange={onChangeHandler}/>\r\n            <label htmlFor={`${radioName}-${color}`} className={selectIsOpen ? 'active' : ''} onClick={toggleSelect}>{color}</label>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RadioInput;","import React, {useState} from 'react';\r\nimport './Color.css';\r\nimport RadioInput from \"../../RadioInput\";\r\n\r\n\r\nconst Color = ({ colors, selectIsOpen, setSelectIsOpen\r\n}) => {\r\n    const [currentColor, setCurrentColor] = useState({name: 'initialValue', color: 'Цвет'});\r\n\r\n    const handleColor = (e) => {\r\n        setCurrentColor({name: e.target.name, color: e.target.value})\r\n    }\r\n\r\n    const toggleSelect = () => {\r\n        setSelectIsOpen(!selectIsOpen)\r\n    }\r\n\r\n    return (\r\n        <div className=\"shampoo-color\">\r\n            <label className={`select-title ${selectIsOpen ? 'active' : ''}`} onClick={toggleSelect}>{currentColor.color}</label>\r\n\r\n            {colors?.map(([name, color], i) => {\r\n                const RadioInputOptions = {\r\n                    radioName: name,\r\n                    onChangeHandler: handleColor,\r\n                    color,\r\n                    selectIsOpen,\r\n                    toggleSelect\r\n                }\r\n\r\n                return (\r\n                    <RadioInput options={RadioInputOptions} key={i}/>)\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Color","import React from 'react';\r\nimport './Capacity.css';\r\n\r\nconst Capacity = ({ currentCapacity, capacities, capacityHandler}) => {\r\n    const changeHandler = (e) => {\r\n        capacityHandler(parseInt(e.target.value));\r\n    }\r\n\r\n    return (\r\n            <div className=\"shampoo-capacity\">\r\n                {capacities?.map(([name, value], i) => {\r\n                    return (\r\n                        <React.Fragment key={i}>\r\n                            <input id={`${name}-${value}`} type=\"radio\" value={value} name={`${name}-${value}`} onChange={changeHandler} checked={currentCapacity === value}/>\r\n                            <label htmlFor={`${name}-${value}`}><span>{value} мл</span></label>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Capacity;","import React from 'react';\r\nimport './Quantity.css';\r\n\r\nconst Quantity = ({ quantity, quantityHandler}) => {\r\n    return (\r\n        <div className=\"shampoo-quantity\">\r\n            <button onClick={(e) => {\r\n                e.preventDefault()\r\n                quantityHandler(prev => prev > 1 ? prev - 1 : 1)\r\n            }}>-</button>\r\n            <output name=\"quantity\">{quantity}</output>\r\n            <button onClick={(e) => {\r\n                e.preventDefault()\r\n                quantityHandler(prev => prev + 1)}\r\n            }>+</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Quantity;","import React, {useState, useEffect} from 'react';\r\nimport './ShampooItem.css';\r\n\r\nimport Color from \"./Color/Color\";\r\nimport Capacity from \"./Capacity/Capacity\";\r\nimport Quantity from \"./Quantity/Quantity\";\r\n\r\nconst coefficientCapacity = {\r\n    100: 1,\r\n    200: 1.3,\r\n    300: 1.7,\r\n}\r\n\r\nconst ShampooItem = ({name, image, radio}) => {\r\n    const [price] = useState(200);\r\n    const [colors, setColors] = useState(null);\r\n    const [capacities, setCapacities] = useState(null);\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    const [currentCapacity, setCurrentCapacity] = useState(100);\r\n    const [selectIsOpen, setSelectIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setColors([[radio, 'Красный'], [radio, 'Зеленый'], [radio, 'Синий'], [radio, 'Фиолетовый'], [radio, 'Желтый']]);\r\n        setCapacities([[radio, 100], [radio, 200], [radio, 300]])\r\n    }, [])\r\n\r\n\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault()\r\n        // setColor('Цвет');\r\n        setQuantity(1);\r\n        setCurrentCapacity(100);\r\n    }\r\n\r\n    return <li className=\"shampoo-item\" onMouseLeave={() => setSelectIsOpen(false)}>\r\n        <div className=\"new-label\">NEW</div>\r\n        <img className=\"shampoo-img\" src={image} alt=\"Изображение шампуня\" width=\"255\" height=\"260\"/>\r\n        <button className=\"open-button\"/>\r\n        <h3>{name}</h3>\r\n        <p className=\"shampoo-descr\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, ed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco.</p>\r\n\r\n        <form onSubmit={handleOnSubmit}>\r\n            <Color colors={colors} selectIsOpen={selectIsOpen} setSelectIsOpen={setSelectIsOpen}/>\r\n            <span className=\"shampoo-price\">{(price * coefficientCapacity[currentCapacity]) * quantity}</span>\r\n            <Capacity capacities={capacities} currentCapacity={currentCapacity} capacityHandler={setCurrentCapacity}/>\r\n            <Quantity quantity={quantity} quantityHandler={setQuantity}/>\r\n            <button type=\"submit\" className=\"submit-button\">Купить</button>\r\n        </form>\r\n    </li>;\r\n}\r\n\r\nexport default ShampooItem","export default __webpack_public_path__ + \"static/media/1.d1b31dde.png\";","export default __webpack_public_path__ + \"static/media/2.58d36d6f.png\";","export default __webpack_public_path__ + \"static/media/3.16df4f97.jpg\";","import React from 'react';\r\nimport './ShampooItem/ShampooItem';\r\nimport ShampooItem from \"./ShampooItem/ShampooItem\";\r\nimport ShampooImg1 from '../img/1.png';\r\nimport ShampooImg2 from '../img/2.png';\r\nimport ShampooImg3 from '../img/3.jpg';\r\nimport './ShampooList.css';\r\n\r\nconst ShampoosList = [{name: 'Шампунь1', image: ShampooImg1, radio: 'Shampoo1' }, {name: 'Шампунь2', image: ShampooImg2, radio: 'Shampoo2' }, {name: 'Шампунь3', image: ShampooImg3, radio: 'Shampoo3' }]\r\n\r\nconst ShampooList = () => {\r\n    return (\r\n        <ul className=\"shampoo-list\">\r\n            {ShampoosList.map(shampoo => <ShampooItem name={shampoo.name} image={shampoo.image} key={shampoo.name} radio={shampoo.radio}/>)}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ShampooList;","import React from 'react';\nimport ShampooList from \"./components/ShampooList\";\nimport './fonts.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ShampooList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}